From 3e8137d54a7ffdb108faa2112a6d8a8a5a08ae86 Mon Sep 17 00:00:00 2001
From: AsavarTzeth <asavartzeth@gmail.com>
Date: Wed, 2 Sep 2020 17:07:20 +0200
Subject: [PATCH 4/4] Flatpak: Support sandboxed attachment opening

Ensure that xdg portals can open attachment files, while simultaneously
removing the only critical need for global /tmp access.

The path: $XDG_RUNTIME_DIR/app/$FLATPAK_ID is used for flatpak because
it exists, respects XDG standards and is host accessible by default.

- Fix attachment opening from a flatpak style sandbox
- Respect $XDG_RUNTIME_DIR when available
- Remove need for needlessly exposing the host /tmp
---
 src/gui/entry/EntryAttachmentsWidget.cpp | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/src/gui/entry/EntryAttachmentsWidget.cpp b/src/gui/entry/EntryAttachmentsWidget.cpp
index 836c8ef2..f2740903 100644
--- a/src/gui/entry/EntryAttachmentsWidget.cpp
+++ b/src/gui/entry/EntryAttachmentsWidget.cpp
@@ -1,5 +1,6 @@
 #include "EntryAttachmentsWidget.h"
 #include "ui_EntryAttachmentsWidget.h"
+#include "config-keepassx.h"
 
 #include <QDesktopServices>
 #include <QDir>
@@ -333,9 +334,14 @@ bool EntryAttachmentsWidget::openAttachment(const QModelIndex& index, QString& e
     const QByteArray attachmentData = m_entryAttachments->value(filename);
 
     // tmp file will be removed once the database (or the application) has been closed
-#ifdef KEEPASSXC_DIST_SNAP
+
+#if defined(KEEPASSXC_DIST_SNAP)
     const QString tmpFileTemplate =
         QString("%1/XXXXXX.%2").arg(QProcessEnvironment::systemEnvironment().value("SNAP_USER_DATA"), filename);
+#elif defined(KEEPASSXC_DIST_FLATPAK)
+    const QString tmpFileTemplate =
+        QString("%1/app/%2/XXXXXX.%3").arg(QStandardPaths::writableLocation(QStandardPaths::RuntimeLocation),
+                "org.keepassxc.KeePassXC", filename);
 #else
     const QString tmpFileTemplate = QDir::temp().absoluteFilePath(QString("XXXXXX.").append(filename));
 #endif
-- 
2.30.0

